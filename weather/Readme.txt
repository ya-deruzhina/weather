Как работает программа:

Заходим на базовую страницу
http://127.0.0.1:8000/weather/
Нам предлагается выбрать город или all и нажать кнопку Choise

Если мы выбираем город, то программа нам выводит на экран погоду на 5 дней, 
если all - все данные из БД в порядке записи в БД
ВНИМАНИЕ!
Чтобы список со ссылками - запрос post, html render и список активных ссылок на каждую страницу
Чтобы Json - запрос get, сериалайзер и результат json
-> http://127.0.0.1:8000/weather/base/

** Настроен Тест, но пока что работает, если: в views.weather.py поставить city='all'

На главной странице можно узнать свой гороскоп (авторизация). Для этого надо нажать кнопку "Посмотреть свой личный прогноз HOROSKOP"
Мы переходим на страницу, где нам нужно зарегистрироваться или войти.

После выбора "Autorization" мы переходим на страницу, где надо ввести username и password - эти данные передаются на страницу /token/ 
для получения токена и рефреша. Также настроена страница обновления токена по рефрешу (магическим путем туда передается рефреш)

Если мы хотим создать пользователя, то необходимо нажать "Registration". Мы переходим на следующую страницу, где берутся поля из модели
Мы заполняем username, password и выбираем из списка user_zodiac. 

Далее нажимаем "Registrate" и данные записываются в базу. 
После возвращаемся на страницу, где нам вновь предлагают зарегистрироваться или войти.

На этот этапе происходит магия 
Мы переходим с этой страницы
http://127.0.0.1:8000/weather/horoskop/autorization/
На вот эту страницу (забирая с собой токен) - в данном случае user - это username
http://127.0.0.1:8000/weather/horoskop/base/user/

Здесь выводится либо
гороскоп пользователя
посмотреть все гороскопы
редактировать пользователя
страница для вопросов

либо
"Status":"Horoskop Not Created"

Модель юзера: войти, зарегистрироваться, посмотреть данные, редактировать данные, удалить.
Модель юзера отвязана от дефолтной, можно создавать свою базу юзеров с зодиаками

По кнопке "все гороскопы" - список всех гороскопов
в зависимости от username в url
admin - список со ссылкой на каждый (для редактирования) + кнопка создать
остальным - список Json всех гороскопов 

У админа список с возможностью посмотреть 1 гороскоп, редактировать описание или удалить (два последних работают через постман)

Чат поддержки
Страница со всеми сообщениями + отправить новое сообщение
удалить сообщения
через постман (3 - это id сообщения)
http://127.0.0.1:8000/weather/horoskop/message/delete/3/
Автор сообщения - либо username из url, либо admin из админки (можно написать любое имя)
В БД есть привязка к users (их странички с сообщениями), и есть автор - просто имя, которое текстом выводится

Гороскоп и User - сделано все, почистить только неиспользуемое

Обновление Погоды:
На главной странице есть кнопка Update - она берет данные со стороннего сервера и записывает их к себе в базу
(если сторонний сайт недоступен, то появляется сообщение - not updated)
Проверяет, чтобы не повторялись записи (один день одного города = 1 запись). Иначе удаляет более старые (по id определяет)

Второй порт запускае
marina@marina:~/study/django/facebook$ python3 manage.py runserver 127.0.0.1:8001


# Что нужно сделать:
- Тесты - написать для всех вью тесты
- Навести красоту, удалить лишнее (во view.weather.weather в api WeatherView убрать city = 'all')